Q3. Replicating Substring
Problem Description
Given a string B, find if it is possible to re-order the characters of the string B so that it can be represented as a concatenation of A similar strings.

Eg: B = aabb and A = 2, then it is possible to re-arrange the string as "abab" which is a concatenation of 2 similar strings "ab".

If it is possible, return 1, else return -1.

Example Input
Input 1:

 A = 2
 B = "bbaabb"
Input 2:
 A = 2
 B = "bc"

Example Output
Output 1:
 1
Output 2:
 -1

solution:
class Solution:
    # @param A : integer
    # @param B : string
    # @return an integer
    def solve(self, A, B):
        ans={}
        for i in range(len(B)):
            if(ans.get(B[i])!=None):
                ans[B[i]]+=1
            else:
                ans[B[i]]=1
        for i in ans.values():
            c=0
            if(int(i)%A==0):
                c=1
        if(c==1):
            return 1
        else:
            return -1
            
    
                
